name: deploy to staging server

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node env
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache node_modules
        uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run tests
        run: npm run test

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_SECRET }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            registry.digitalocean.com/edvisor/edvisor-frontend:${{ github.sha }}
          cache-from: type=registry,ref=registry.digitalocean.com/edvisor/edvisor-frontend:main
          cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: [tests, docker]
    steps:
      - name: send deploy webhook
        run: |
            curl \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -u ${{ secrets.ANSIBLE_WEBHOOK_ACCESS_TOKEN }} \
              https://api.github.com/repos/edvisor-ru/ansible/dispatches \
              -d '{"event_type":"deploy", "client_payload": { "project": "edvisor-frontend", "ansible_environment": "staging", "sha": "${{ github.sha }}" }}'
